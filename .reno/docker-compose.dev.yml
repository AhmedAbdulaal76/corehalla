version: "3.8"

services:
    studio:
        container_name: supabase-studio
        image: supabase/studio:latest
        restart: unless-stopped
        ports:
            - ${RENO_STUDIO_PORT}:3000/tcp
        environment:
            STUDIO_PG_META_URL: http://meta:8080
            POSTGRES_PASSWORD: ${RENO_POSTGRES_PASSWORD}

            SUPABASE_URL: http://kong:8000
            SUPABASE_REST_URL: ${RENO_PUBLIC_REST_URL}
            SUPABASE_ANON_KEY: ${RENO_ANON_KEY}
            SUPABASE_SERVICE_KEY: ${RENO_SERVICE_ROLE_KEY}

    kong:
        container_name: supabase-kong
        image: kong:2.1
        restart: unless-stopped
        ports:
            - ${RENO_KONG_HTTP_PORT}:8000/tcp
            - ${RENO_KONG_HTTPS_PORT}:8443/tcp
        environment:
            KONG_DATABASE: "off"
            KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
            # https://github.com/supabase/cli/issues/14
            KONG_DNS_ORDER: LAST,A,CNAME
            KONG_PLUGINS: request-transformer,cors,key-auth,acl
        volumes:
            - ./volumes/api/kong.yml:/var/lib/kong/kong.yml

    auth:
        container_name: supabase-auth
        image: supabase/gotrue:v2.5.21
        depends_on:
            - db
        restart: unless-stopped
        environment:
            GOTRUE_API_HOST: 0.0.0.0
            GOTRUE_API_PORT: 9999

            GOTRUE_DB_DRIVER: postgres
            GOTRUE_DB_DATABASE_URL: postgres://postgres:${RENO_POSTGRES_PASSWORD}@db:5432/postgres?search_path=auth

            GOTRUE_SITE_URL: ${RENO_SITE_URL}
            GOTRUE_URI_ALLOW_LIST: ${RENO_ADDITIONAL_REDIRECT_URLS}
            GOTRUE_DISABLE_SIGNUP: ${RENO_DISABLE_SIGNUP}

            GOTRUE_JWT_ADMIN_ROLES: service_role
            GOTRUE_JWT_AUD: authenticated
            GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
            GOTRUE_JWT_EXP: ${RENO_JWT_EXPIRY}
            GOTRUE_JWT_SECRET: ${RENO_JWT_SECRET}

            GOTRUE_EXTERNAL_EMAIL_ENABLED: ${RENO_ENABLE_EMAIL_SIGNUP}
            GOTRUE_MAILER_AUTOCONFIRM: ${RENO_ENABLE_EMAIL_AUTOCONFIRM}
            GOTRUE_SMTP_ADMIN_EMAIL: ${RENO_SMTP_ADMIN_EMAIL}
            GOTRUE_SMTP_HOST: ${RENO_SMTP_HOST}
            GOTRUE_SMTP_PORT: ${RENO_SMTP_PORT}
            GOTRUE_SMTP_USER: ${RENO_SMTP_USER}
            GOTRUE_SMTP_PASS: ${RENO_SMTP_PASS}
            GOTRUE_SMTP_SENDER_NAME: ${RENO_SMTP_SENDER_NAME}
            GOTRUE_MAILER_URLPATHS_INVITE: /auth/v1/verify
            GOTRUE_MAILER_URLPATHS_CONFIRMATION: /auth/v1/verify
            GOTRUE_MAILER_URLPATHS_RECOVERY: /auth/v1/verify
            GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: /auth/v1/verify

            GOTRUE_EXTERNAL_PHONE_ENABLED: ${RENO_ENABLE_PHONE_SIGNUP}
            GOTRUE_SMS_AUTOCONFIRM: ${RENO_ENABLE_PHONE_AUTOCONFIRM}

            GOTRUE_EXTERNAL_DISCORD_ENABLED: ${RENO_DISCORD_AUTH_ENABLED}
            GOTRUE_EXTERNAL_DISCORD_CLIENT_ID: ${RENO_DISCORD_AUTH_CLIENT_ID}
            GOTRUE_EXTERNAL_DISCORD_SECRET: ${RENO_DISCORD_AUTH_SECRET}
            GOTRUE_EXTERNAL_DISCORD_REDIRECT_URI: http://localhost:${RENO_KONG_HTTP_PORT}/auth/v1/callback

    rest:
        container_name: supabase-rest
        image: postgrest/postgrest:v9.0.0
        depends_on:
            - db
        restart: unless-stopped
        environment:
            PGRST_DB_URI: postgres://postgres:${RENO_POSTGRES_PASSWORD}@db:5432/postgres
            PGRST_DB_SCHEMAS: public,storage, graphql_public
            PGRST_DB_ANON_ROLE: anon
            PGRST_JWT_SECRET: ${RENO_JWT_SECRET}
            PGRST_DB_USE_LEGACY_GUCS: "false"

    realtime:
        container_name: supabase-realtime
        image: supabase/realtime:v0.22.4
        depends_on:
            - db
        restart: unless-stopped
        environment:
            DB_HOST: db
            DB_PORT: 5432
            DB_NAME: postgres
            DB_USER: postgres
            DB_PASSWORD: ${RENO_POSTGRES_PASSWORD}
            DB_SSL: "false"
            PORT: 4000
            JWT_SECRET: ${RENO_JWT_SECRET}
            REPLICATION_MODE: RLS
            REPLICATION_POLL_INTERVAL: 100
            SECURE_CHANNELS: "true"
            SLOT_NAME: supabase_realtime_rls
            TEMPORARY_SLOT: "true"
        command: >
            bash -c "./prod/rel/realtime/bin/realtime eval Realtime.Release.migrate
            && ./prod/rel/realtime/bin/realtime start"

    storage:
        container_name: supabase-storage
        image: supabase/storage-api:v0.10.0
        depends_on:
            - db
            - rest
        restart: unless-stopped
        environment:
            ANON_KEY: ${RENO_ANON_KEY}
            SERVICE_KEY: ${RENO_SERVICE_ROLE_KEY}
            POSTGREST_URL: http://rest:3000
            PGRST_JWT_SECRET: ${RENO_JWT_SECRET}
            DATABASE_URL: postgres://postgres:${RENO_POSTGRES_PASSWORD}@db:5432/postgres
            PGOPTIONS: -c search_path=storage,public
            FILE_SIZE_LIMIT: 52428800
            STORAGE_BACKEND: file
            FILE_STORAGE_BACKEND_PATH: /var/lib/storage
            TENANT_ID: stub
            # TODO: https://github.com/supabase/storage-api/issues/55
            REGION: stub
            GLOBAL_S3_BUCKET: stub
        volumes:
            - ./volumes/storage:/var/lib/storage

    meta:
        container_name: supabase-meta
        image: supabase/postgres-meta:v0.29.0
        depends_on:
            - db
        restart: unless-stopped
        environment:
            PG_META_PORT: 8080
            PG_META_DB_HOST: db
            PG_META_DB_PASSWORD: ${RENO_POSTGRES_PASSWORD}

    db:
        container_name: supabase-db
        image: supabase/postgres:14.1.0.21
        command: postgres -c config_file=/etc/postgresql/postgresql.conf
        restart: unless-stopped
        ports:
            - ${RENO_POSTGRES_PORT}:5432
        environment:
            POSTGRES_PASSWORD: ${RENO_POSTGRES_PASSWORD}
        volumes:
            - ./volumes/db/data:/var/lib/postgresql/data
            - ./volumes/db/init:/docker-entrypoint-initdb.d
    app:
        build:
            context: ../
            dockerfile: Dockerfile.dev
        restart: unless-stopped
        ports:
            - "3000:3000"
        container_name: corehalla-app
        stdin_open: true
        volumes:
            - ../:/usr/src/app
            - /usr/src/app/node_modules
            - /usr/src/app/app/node_modules
        environment:
            NEXT_PUBLIC_SUPABASE_URL: http://localhost:${RENO_KONG_HTTP_PORT}
            NEXT_PUBLIC_SUPABASE_ANON_KEY: ${RENO_ANON_KEY}
            SUPABASE_URL: http://kong:8000
            SUPABASE_SERVICE_KEY: ${RENO_SERVICE_ROLE_KEY}
            BH_API_KEY: ${RENO_BH_API_KEY}
            NEXT_PUBLIC_GA_TRACKING_ID: ${RENO_GA_TRACKING_ID}
            NEXT_PUBLIC_ADSENSE_ID: ${RENO_ADSENSE_ID}
        depends_on:
            - db
